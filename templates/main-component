<!-- Main Content Template -->
<div class="flex-1 flex flex-col bg-transparent">
    <!-- Mobile backdrop -->
    <div x-show="sidebarVisible" @click="sidebarVisible = false" class="fixed inset-0 bg-black/50 z-20 md:hidden" x-transition></div>
    
    <div class="p-4 flex items-center justify-between bg-white/30 dark:bg-gray-800/30 backdrop-blur-sm relative z-10">
        <div class="flex items-center space-x-4">
            <button @click.stop="sidebarVisible = !sidebarVisible" class="p-2 bg-white/60 dark:bg-gray-700/60 hover:bg-white/80 dark:hover:bg-gray-600/80 backdrop-blur-sm rounded-lg transition-colors">
                <svg class="w-5 h-5 transition-transform duration-300 text-gray-400 dark:text-gray-500" :class="sidebarVisible ? 'rotate-180' : ''" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
            </button>
            <div x-show="currentSection" class="flex items-center space-x-2">
                <i :data-lucide="currentSection.icon" class="w-5 h-5 text-blue-600 dark:text-blue-400"></i>
                <h2 class="text-xl font-bold text-slate-800 dark:text-slate-200" x-text="currentSection.title"></h2>
                <span class="text-sm bg-white/60 dark:bg-gray-700/60 backdrop-blur-sm text-blue-700 dark:text-blue-300 px-2 py-1 rounded" x-text="currentSection.paper"></span>
            </div>
        </div>
        <div x-show="currentSection" class="text-sm text-slate-700 dark:text-slate-300 bg-white/60 dark:bg-gray-700/60 backdrop-blur-sm px-3 py-1 rounded-md">
            <span x-text="getAssessedCount(currentSection.topics)"></span>/<span x-text="currentSection.topics.length"></span> topics assessed
        </div>
    </div>
    
    <div class="h-px bg-white/30 dark:bg-gray-600/30 backdrop-blur-sm"></div>
    
    <div class="flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 relative z-10">
        <div class="p-6">
            <!-- Main Menu Cards -->
            <div x-show="showMainMenuCards()" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0 transform scale-95 -translate-y-4" x-transition:enter-end="opacity-100 transform scale-100 translate-y-0">
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
                    <template x-for="group in getMainMenuGroups()" :key="group.title">
                        <div @click="selectMainMenuGroup(group.title)" 
                             class="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-lg cursor-pointer group flex flex-col"
                             @mousemove="(e) => {
                                 const rect = e.currentTarget.getBoundingClientRect();
                                 const x = e.clientX - rect.left - rect.width / 2;
                                 const y = e.clientY - rect.top - rect.height / 2;
                                 const rotateX = (y / rect.height) * -3;
                                 const rotateY = (x / rect.width) * 3;
                                 e.currentTarget.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.005)`;
                             }"
                             @mouseleave="(e) => {
                                 e.currentTarget.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1)';
                                 e.currentTarget.style.transition = 'transform 0.3s ease';
                                 setTimeout(() => { e.currentTarget.style.transition = ''; }, 300);
                             }"
                             @mouseenter="(e) => {
                                 e.currentTarget.style.transition = '';
                             }">
                            <h3 class="font-bold text-gray-800 dark:text-gray-200 mb-3" x-text="group.title"></h3>
                            
                            <!-- Sections List -->
                            <div class="mb-4 flex-1">
                                <h4 class="text-xs font-semibold text-gray-600 dark:text-gray-400 mb-2" x-text="`${group.sections.length} Sections:`"></h4>
                                <div class="space-y-1">
                                    <template x-for="sectionKey in group.sections" :key="sectionKey">
                                        <div class="flex items-center justify-between text-xs">
                                            <span class="text-gray-700 dark:text-gray-300 flex-1 mr-2" x-text="specificationData[sectionKey].title"></span>
                                            <template x-if="getAssessedCount(specificationData[sectionKey].topics) > 0">
                                                <div class="flex items-center justify-center w-6 h-6 rounded text-xs font-bold text-white" :style="getConfidenceBarStyle(Math.round((specificationData[sectionKey].topics.filter(t => confidenceLevels[t.id]).reduce((sum, t) => sum + confidenceLevels[t.id], 0) / Math.max(1, specificationData[sectionKey].topics.filter(t => confidenceLevels[t.id]).length))))" x-text="Math.round((specificationData[sectionKey].topics.filter(t => confidenceLevels[t.id]).reduce((sum, t) => sum + confidenceLevels[t.id], 0) / Math.max(1, specificationData[sectionKey].topics.filter(t => confidenceLevels[t.id]).length)))"></div>
                                            </template>
                                            <template x-if="getAssessedCount(specificationData[sectionKey].topics) === 0">
                                                <div class="w-6 h-6 rounded border border-gray-300 dark:border-gray-600 flex items-center justify-center">
                                                    <span class="text-xs text-gray-400">-</span>
                                                </div>
                                            </template>
                                        </div>
                                    </template>
                                </div>
                            </div>
                            
                            <!-- Progress and Confidence bars at bottom -->
                            <div class="text-sm text-gray-600 dark:text-gray-400 mt-auto">
                                <div class="flex items-center justify-between mb-2">
                                    <span>Progress</span>
                                    <span x-text="`${getGroupProgress(group.sections)}%`"></span>
                                </div>
                                <div class="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2 mb-3">
                                    <div class="bg-blue-600 h-2 rounded-full transition-all duration-300" :style="`width: ${getGroupProgress(group.sections)}%`"></div>
                                </div>
                                <div class="flex items-center justify-between mb-2">
                                    <span>Avg. Confidence</span>
                                    <span x-text="`${getGroupAverageConfidence(group.sections).toFixed(1)}/5`"></span>
                                </div>
                                <div class="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2">
                                    <div class="h-2 rounded-full transition-all duration-300" :style="`width: ${(getGroupAverageConfidence(group.sections) / 5) * 100}%; ${getConfidenceBarStyle(Math.round(getGroupAverageConfidence(group.sections)))}`"></div>
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>

            <!-- Section Cards View -->
            <!-- ... section cards template ... -->

            <!-- Regular Topics View with Back Button -->
            <!-- ... topics template ... -->
        </div>
    </div>
</div>
